{"pageProps":{"frontmatter":{"title":"Buses and Actors","description":"An overview of all buses in Comunica and their actors."},"body":"\nThis page gives an **overview of all _buses_ and _actors_**\nthat are used in the default Comunica engines,\nsuch as [Comunica SPARQL](https://github.com/comunica/comunica/tree/master/engines/query-sparql)\nand [Comunica SPARQL File](https://github.com/comunica/comunica/tree/master/engines/query-sparql-file)\nOther configurations such as [Comunica SPARQL HDT](https://github.com/comunica/comunica-query-sparql-hdt) contain additional actors and buses.\n\nThis builds upon the [core architecture](/docs/modify/advanced/architecture_core/) of _actors_, _mediators_, and _buses_.\nAn overview of how these buses and actors are connected can be found in the [SPARQL architecture](/docs/modify/advanced/architecture_sparql/).\n\n## Context Preprocess\n\n_Package: [`@comunica/bus-context-preprocess`](https://github.com/comunica/comunica/tree/master/packages/bus-context-preprocess)_\n\nA bus in which actors can optionally modify the [query context](/docs/query/advanced/context/).\n\nSubscribed actors need to implement [`ActorContextPreprocess`](https://comunica.github.io/comunica/classes/_comunica_bus_context_preprocess.ActorContextPreprocess.html).\n\n| Name                   | Package                                                                                                                                                                  | Description                                                                                                                                                             |\n|------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Convert Shortcuts      | [`@comunica/actor-context-preprocess-convert-shortcuts`](https://github.com/comunica/comunica/tree/master/packages/actor-context-preprocess-convert-shortcuts)           | Expands shortcuts in the context to full context keys.                                                                                                                  |\n| Query Source Identify  | [`@comunica/actor-context-preprocess-query-source-identify`](https://github.com/comunica/comunica/tree/master/packages/actor-context-preprocess-query-source-identify)   | Identifies all query sources in the context using the [Query Source Identify bus](https://github.com/comunica/comunica/tree/master/packages/bus-query-source-identify). |\n| Query Source Skolemize | [`@comunica/actor-context-preprocess-query-source-skolemize`](https://github.com/comunica/comunica/tree/master/packages/actor-context-preprocess-query-source-skolemize) | Places all identified query sources in a skolemization wrapper.                                                                                                         |\n| Set Defaults           | [`@comunica/actor-context-preprocess-set-defaults`](https://github.com/comunica/comunica/tree/master/packages/actor-context-preprocess-set-defaults)                     | Will set default context values for query engines, such as the logger, timestamp, function arguments cache, ...                                                         |\n| Source To Destination  | [`@comunica/actor-context-preprocess-source-to-destination`](https://github.com/comunica/comunica/tree/master/packages/actor-context-preprocess-source-to-destination)       | Defines the write destination only if a single query source has been defined.                                                                                           |\n\n\n## Dereference\n\n_Package: [`@comunica/bus-dereference`](https://github.com/comunica/comunica/tree/master/packages/bus-dereference)_\n\nDereferences a path or URL into a (generic) stream.\n\nSubscribed actors need to implement [`ActorDereference`](https://comunica.github.io/comunica/classes/_comunica_bus_dereference.ActorDereference.html).\n\n### Actors\n\n| Name     | Package                                                                                                                    | Description                                |\n|----------|----------------------------------------------------------------------------------------------------------------------------|--------------------------------------------|\n| File     | [`@comunica/actor-dereference-file`](https://github.com/comunica/comunica/tree/master/packages/actor-dereference-file)     | Dereferences a local file.                 |\n| HTTP     | [`@comunica/actor-dereference-http`](https://github.com/comunica/comunica/tree/master/packages/actor-dereference-http)     | Dereferences a remote file.                |\n| Fallback | [`@comunica/actor-dereference-fallback`](https://github.com/comunica/comunica/tree/master/packages/actor-dereference-fallback) | A fallback actor with the lowest priority. |\n\n\n## Dereference RDF\n\n_Package: [`@comunica/bus-dereference-rdf`](https://github.com/comunica/comunica/tree/master/packages/bus-dereference-rdf)_\n\nDereferences a path or URL into a stream of quads.\n\nSubscribed actors need to implement [`ActorDereferenceRdf`](https://comunica.github.io/comunica/classes/_comunica_bus_dereference_rdf.ActorDereferenceRdf.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| Parse | [`@comunica/actor-dereference-rdf-parse`](https://github.com/comunica/comunica/tree/master/packages/actor-dereference-rdf-parse) | Dereferences RDF using [`@comunica/bus-dereference`](https://github.com/comunica/comunica/tree/master/packages/bus-dereference). Invokes parsing with [`@comunica/bus-rdf-parse`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-parse). |\n\n\n## Hash Bindings\n\n_Package: [`@comunica/bus-hash-bindings`](https://github.com/comunica/comunica/tree/master/packages/bus-hash-bindings)_\n\nA bus for hashing `Bindings`.\n\nSubscribed actors need to implement [`ActorHashBindings`](https://comunica.github.io/comunica/classes/_comunica_bus_hash_bindings.ActorHashBindings.html).\n\n### Actors\n\n| Name | Package                                                                                                                       | Description                 |\n|------|-------------------------------------------------------------------------------------------------------------------------------|-----------------------------|\n| SHA1 | [`@comunica/actor-hash-bindings-sha1`](https://github.com/comunica/comunica/tree/master/packages/actor-hash-bindings-sha1) | Hashes bindings using SHA1. |\n\n\n## HTTP\n\n_Package: [`@comunica/bus-http`](https://github.com/comunica/comunica/tree/master/packages/bus-http)_\n\nPerforms HTTP(S) requests.\n\nSubscribed actors need to implement [`ActorHttp`](https://comunica.github.io/comunica/classes/_comunica_bus_http.ActorHttp.html).\n\n### Actors\n\n| Name    | Package                                                                                                        | Description                                                       |\n|---------|----------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------|\n| Memento | [`@comunica/actor-http-memento`](https://github.com/comunica/comunica/tree/master/packages/actor-http-memento) | Implements the [Memento protocol](/docs/query/advanced/memento/). |\n| Native  | [`@comunica/actor-http-native`](https://github.com/comunica/comunica/tree/master/packages/actor-http-native)   | Performs requests using Node's request library.                   |\n| Fetch   | [`@comunica/actor-http-fetch`](https://github.com/comunica/comunica/tree/master/packages/actor-http-fetch)     | Performs requests using the fetch API.                            |\n| Proxy   | [`@comunica/actor-http-proxy`](https://github.com/comunica/comunica/tree/master/packages/actor-http-proxy)     | Run requests through a proxy.                                     |\n| Wayback | [`@comunica/actor-http-wayback`](https://github.com/comunica/comunica/tree/master/packages/actor-http-wayback)   | Run requests through the Wayback machine.                         |\n\n\n## HTTP Invalidate\n\n_Package: [`@comunica/bus-http-invalidate`](https://github.com/comunica/comunica/tree/master/packages/bus-http-invalidate)_\n\nA bus for HTTP invalidation events.\n\nSubscribed actors need to implement [`ActorHttpInvalidate`](https://comunica.github.io/comunica/classes/_comunica_bus_http.ActorHttp.html).\n\n\n## Init\n\n_Package: [`@comunica/bus-init`](https://github.com/comunica/comunica/tree/master/packages/bus-init)_\n\nAll Comunica engines start here. This is where they accept generic input parameters, such as CLI arguments.\n\nSubscribed actors need to implement [`ActorInit`](https://comunica.github.io/comunica/classes/_comunica_bus_init.ActorInit.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| Query | [`@comunica/actor-init-query`](https://github.com/comunica/comunica/tree/master/packages/actor-init-query) | Initializes query execution by parsing a given query, optimizing, executing, and serializing results. |\n\n\n## Merge Bindings Context\n\n_Package: [`@comunica/bus-merge-bindings-context`](https://github.com/comunica/comunica/tree/master/packages/bus-init)_\n\nA bus for creating merge handlers that are responsible for merging context entries in bindings with different values.\n\nSubscribed actors need to implement [`ActorMergeBingsContext`](https://comunica.github.io/comunica/classes/_comunica_bus_merge_bindings_context.ActorMergeBingsContext.html).\n\n### Actors\n\n| Name  | Package | Description                                          |\n|-------| ------- |------------------------------------------------------|\n| Union | [`@comunica/actor-actor-merge-binding-factory-context-union`](https://github.com/comunica/comunica/tree/master/packages/actor-merge-binding-factory-context-union) | Merges context entry values by taking the set-union. |\n\n\n## Optimize Query Operation\n\n_Package: [`@comunica/bus-optimize-query-operation`](https://github.com/comunica/comunica/tree/master/packages/bus-optimize-query-operation)_\n\nApply optional optimizations to the SPARQL algebra before actual execution.\nOptionally, a modified context can be returned.\n\nSubscribed actors need to implement [`ActorOptimizeQueryOperation`](https://comunica.github.io/comunica/classes/_comunica_bus_optimize_query_operation.ActorOptimizeQueryOperation.html).\n\n### Actors\n\n| Name                           | Package                                                                                                                                                                                            | Description                                                                                                                                               |\n|--------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Assign Sources Exhaustive      | [`@comunica/actor-optimize-query-operation-assign-sources-exhaustive`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-assign-sources-exhaustive)         | Converts every quad pattern in the query to a union of quad patterns per source.                                                                          |\n| BGP to Join                    | [`@comunica/actor-optimize-query-operation-bgp-to-join`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-bgp-to-join)                                     | Converts BGPs into join operations.                                                                                                                       |\n| Describe To Constructs Subject | [`@comunica/actor-optimize-query-operation-describe-to-constructs-subject`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-assign-sources-exhaustive)    | Converts [SPARQL `DESCRIBE`](https://www.w3.org/TR/sparql11-query/#describe) operations to construct queries with all triples related to a given subject. |\n| Filter Pushdown                | [`@comunica/actor-optimize-query-operation-filter-pushdown`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-filter-pushdown)                             | Pushes down filter expressions into the query plan as deep as possible.                                                                                   |\n| Join BGP                       | [`@comunica/actor-optimize-query-operation-join-bgp`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-join-bgp)                                           | Merges joins of multiple BGPs into a single BGP.                                                                                                          |\n| Join Connected                 | [`@comunica/actor-optimize-query-operation-join-connected`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-join-connected)                               | Clusters entries within a join operation into separate sub-joins if they are connected by variables.                                                      |\n| Group Sources                  | [`@comunica/actor-optimize-query-operation-group-sources`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-group-sources)                                 | Groups exclusive groups of query operations into sources only if those sources support those grouped operations.                                          |\n| Prune Empty Source Operations  | [`@comunica/actor-optimize-query-operation-prune-empty-source-operations`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-prune-empty-source-operations) | Removes operations from the query plan that are guaranteed to produce empty results.                                                                      |\n| Rewrite Add                    | [`@comunica/actor-optimize-query-operation-rewrite-add`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-rewrite-add)                                     | Rewrites ADD operators as DELETEINSERT operations.                                                                                                        |\n| Rewrite Copy                   | [`@comunica/actor-optimize-query-operation-rewrite-copy`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-rewrite-copy)                                   | Rewrites COPY operators as DELETEINSERT operations.                                                                                                       |\n| Rewrite Move                   | [`@comunica/actor-optimize-query-operation-rewrite-move`](https://github.com/comunica/comunica/tree/master/packages/actor-optimize-query-operation-rewrite-move)                                   | Rewrites MOVE operators as DELETEINSERT operations.                                                                                                       |\n\n\n## Query Operation\n\n_Package: [`@comunica/bus-query-operation`](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation)_\n\nEvaluates [SPARQL algebra operations](/docs/modify/advanced/algebra/).\n\nSubscribed actors need to implement [`ActorQueryOperation`](https://comunica.github.io/comunica/classes/_comunica_bus_query_operation.ActorQueryOperation.html)\nor [`ActorQueryOperationTyped`](https://comunica.github.io/comunica/classes/_comunica_bus_query_operation.ActorQueryOperationTyped.html).\n\n### Actors\n\n| Name                    | Package                                                                                                                                                           | Description                                                                                                                                                         |\n|-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Ask                     | [`@comunica/actor-query-operation-ask`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-ask)                                      | Handles `ASK` operations.                                                                                                                                           |\n| BGP join                | [`@comunica/actor-query-operation-bgp-join`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-bgp-join)                            | Handles BGPs by delegating to [`@comunica/bus-rdf-join`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join).                                   |\n| Construct               | [`@comunica/actor-query-operation-construct`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-construct)                          | Handles `CONSTRUCT` operations.                                                                                                                                     |\n| Describe subject        | [`@comunica/actor-query-operation-describe-subject`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-describe-subject)            | Handles `DESCRIBE` operations.                                                                                                                                      |\n| Distinct hash           | [`@comunica/actor-query-operation-distinct-hash`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-distinct-hash)                  | Handles `DISTINCT` operations through hashing.                                                                                                                      |\n| Extend                  | [`@comunica/actor-query-operation-extend`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-extend)                                | Handles `EXTEND` operations.                                                                                                                                        |\n| Filter                  | [`@comunica/actor-query-operation-filter`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-filter)                                | Handles `FILTER` operations.                                                                                                                                        |\n| From quad               | [`@comunica/actor-query-operation-from-quad`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-from-quad)                          | handles `FROM` operations by considering FROM and FROM NAMED as target graph elements in quads.                                                                     |\n| Group                   | [`@comunica/actor-query-operation-group`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-group)                                  | Handles `GROUP BY` operations.                                                                                                                                      |\n| Join                    | [`@comunica/actor-query-operation-join`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-join)                                    | Handles join operations by delegating as inner join to [`@comunica/bus-rdf-join`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join).          |\n| Left join               | [`@comunica/actor-query-operation-leftjoin`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-leftjoin)                            | Handles `OPTIONAL` operations by delegating as optional join to [`@comunica/bus-rdf-join`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join). |\n| Minus                   | [`@comunica/actor-query-operation-minus`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-minus)                                  | Handles `MINUS` operations by delegating as minus join to [`@comunica/bus-rdf-join`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join).       |\n| Nop                     | [`@comunica/actor-query-operation-nop`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-nop)                                      | Handles `NOP` operations.                                                                                                                                           |\n| Order by                | [`@comunica/actor-query-operation-orderby`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-orderby)                      | Handles `ORDER BY` operations.                                                                                                                                      |\n| Path Alt                | [`@comunica/actor-query-operation-path-alt`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-alt)                            | Handles `alt` property path expressions.                                                                                                                            |\n| Path Inv                | [`@comunica/actor-query-operation-path-inv`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-inv)                            | Handles `inv` property path expressions.                                                                                                                            |\n| Path Link               | [`@comunica/actor-query-operation-path-link`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-link)                          | Handles `link` property path expressions.                                                                                                                           |\n| Path Nps                | [`@comunica/actor-query-operation-path-nps`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-nps)                            | Handles `nps` property path expressions.                                                                                                                            |\n| Path One or more        | [`@comunica/actor-query-operation-path-one-or-more`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-one-or-more)            | Handles `one-or-more` property path expressions.                                                                                                                    |\n| Path Seq                | [`@comunica/actor-query-operation-path-seq`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-seq)                            | Handles `seq` property path expressions.                                                                                                                            |\n| Path Zero or more       | [`@comunica/actor-query-operation-path-zero-or-more`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-zero-or-more)          | Handles `zero-or-more` property path expressions.                                                                                                                   |\n| Path Zero or one        | [`@comunica/actor-query-operation-path-zero-or-one`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-path-zero-or-one)            | Handles `zero-or-one` property path expressions.                                                                                                                    |\n| Project                 | [`@comunica/actor-query-operation-project`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-project)                              | Handles `SELECT` operations.                                                                                                                                        |\n| Reduced hash            | [`@comunica/actor-query-operation-reduced-hash`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-reduced-hash)                    | Handles `REDUCED` operations through hashing.                                                                                                                       |\n| Service                 | [`@comunica/actor-query-operation-service`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-service)                              | Handles `SERVICE` operations.                                                                                                                                       |\n| Slice                   | [`@comunica/actor-query-operation-slice`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-slice)                                  | Handles `LIMIT` and `OFFSET` operations.                                                                                                                            |\n| Source                  | [`@comunica/actor-query-operation-source`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-sparql-endpoint)                       | Delegates operations annotated with a query source towards that source.                                                                |\n| Union                   | [`@comunica/actor-query-operation-union`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-union)                                  | Handles `UNION` operations.                                                                                                                                         |\n| Values                  | [`@comunica/actor-query-operation-values`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-values)                                | Handles `VALUES` operations.                                                                                                                                        |\n| Update Clear            | [`@comunica/actor-query-operation-update-clear`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-update-clear)                    | Handles `CLEAR` operations.                                                                                                                                         |\n| Update Composite Update | [`@comunica/actor-query-operation-update-compositeupdate`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-update-compositeupdate) | Handles `composition of multiple SPARQL update operations.                                                                                                          |\n| Update Create           | [`@comunica/actor-query-operation-update-create`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-update-create)                  | Handles `CREATE` operations.                                                                                                                                        |\n| Update Delete Insert    | [`@comunica/actor-query-operation-update-deleteinsert`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-update-deleteinsert)      | Handles `INSERT DATA`, `DELETE DATA`, and `INSERT/DELETE` operations.                                                                                               |\n| Update Drop             | [`@comunica/actor-query-operation-update-drop`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-update-drop)                      | Handles `DROP` operations.                                                                                                                                          |\n| Update Load             | [`@comunica/actor-query-operation-update-load`](https://github.com/comunica/comunica/tree/master/packages/actor-query-operation-update-load)                      | Handles `LOAD` operations.                                                                                                                                          |\n\n\n## Query Parse\n\n_Package: [`@comunica/bus-query-parse`](https://github.com/comunica/comunica/tree/master/packages/bus-query-parse)_\n\nParsing an input query into (SPARQL) algebra.\n\nSubscribed actors need to implement [`ActorQueryParse`](https://comunica.github.io/comunica/classes/_comunica_bus_query_parse.ActorQueryParse.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| SPARQL | [`@comunica/actor-query-parse-sparql`](https://github.com/comunica/comunica/tree/master/packages/actor-query-parse-sparql) | Uses [SPARQLAlgebra.js](https://github.com/joachimvh/SPARQLAlgebra.js) for parsing SPARQL query strings into SPARQL algebra. |\n| GraphQL | [`@comunica/actor-query-parse-graphql`](https://github.com/comunica/comunica/tree/master/packages/actor-query-parse-graphql) | Parses GraphQL strings into SPARQL algebra following the [GraphQL-LD](/docs/query/advanced/graphql_ld/) approach. |\n\n\n## Query Process\n\n_Package: [`@comunica/bus-query-process`](https://github.com/comunica/comunica/tree/master/packages/bus-query-parse)_\n\nA bus for fully processing a query. This usually involves parsing, optimizing, and evaluating, which can be delegated to other buses.\n\nSubscribed actors need to implement [`ActorQueryProcess`](https://comunica.github.io/comunica/classes/_comunica_bus_query_process.ActorQueryProcess.html).\n\n### Actors\n\n| Name             | Package                                                                                                                                            | Description                                                                                               |\n|------------------|----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------|\n| Explain Logical  | [`@comunica/actor-query-process-explain-logical`](https://github.com/comunica/comunica/tree/master/packages/actor-query-process-explain-logical)   | Explains the logical query plan after parsing and optimizing.                                             |\n| Explain Parsed   | [`@comunica/actor-query-process-explain-parsed`](https://github.com/comunica/comunica/tree/master/packages/actor-query-process-explain-parsed)     | Explains the parsed query.                                                                                |\n| Explain Physical | [`@comunica/actor-query-process-explain-physical`](https://github.com/comunica/comunica/tree/master/packages/actor-query-process-explain-physical) | Explains the physical query plan after parsing, optimizing, and evaluating.                               |\n| Sequential       | [`@comunica/actor-query-process-sequential`](https://github.com/comunica/comunica/tree/master/packages/actor-query-process-sequential)        | Processes a query in a sequential manner. It first parses the query, optimizes it, and then evaluates it. |\n\n\n## Query Result Serialize\n\n_Package: [`@comunica/bus-query-result-serialize`](https://github.com/comunica/comunica/tree/master/packages/bus-query-result-serialize)_\n\nSerializes the query result into a text-based serialization.\n\nSubscribed actors need to implement [`ActorQueryResultSerialize`](https://comunica.github.io/comunica/classes/_comunica_bus_query_result_serialize.ActorQueryResultSerialize.html).\n\n### Actors\n\n| Name | Package                                                                                                                               | Description |\n| ---- |---------------------------------------------------------------------------------------------------------------------------------------| ----------- |\n| JSON | [`@comunica/actor-query-result-serialize-json`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-json) | Serializes to a simple JSON format. |\n| RDF | [`@comunica/actor-query-result-serialize-rdf`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-rdf)          | Serializes to an RDF format by delegating to [`@comunica/bus-rdf-serialize`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-serialize). |\n| Simple | [`@comunica/actor-query-result-serialize-simple`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-)          | Serializes to a simple format. |\n| SPARQL CSV | [`@comunica/actor-query-result-serialize-sparql-csv`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-csv)   | Serializes to SPARQL/CSV. |\n| SPARQL JSON | [`@comunica/actor-query-result-serialize-sparql-json`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-json) | Serializes to SPARQL/JSON. |\n| SPARQL TSV | [`@comunica/actor-query-result-serialize-sparql-tsv`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-tsv)   | Serializes to SPARQL/TSV. |\n| SPARQL XML | [`@comunica/actor-query-result-serialize-sparql-xml`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-xml)   | Serializes to SPARQL/XML. |\n| Stats | [`@comunica/actor-query-result-serialize-stats`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-stats)      | Serializes basic statistics. |\n| Table | [`@comunica/actor-query-result-serialize-table`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-table)      | Serializes in a simple table format. |\n| Tree | [`@comunica/actor-query-result-serialize-tree`](https://github.com/comunica/comunica/tree/master/packages/actor-query-result-serialize-tree)        | Serializes to a JSON tree. |\n\n\n## Query Source Identify\n\n_Package: [`@comunica/bus-query-source-identify`](https://github.com/comunica/comunica/tree/master/packages/bus-query-source-identify)_\n\nIdentifying the types of query sources.\n\nSubscribed actors need to implement [`ActorQuerySourceIdentify`](https://comunica.github.io/comunica/classes/_comunica_bus_query_source_identify.ActorQuerySourceIdentify.html).\n\n### Actors\n\n| Name          | Package                                                                                                                                                  | Description                                                                                |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|\n| Serialized    | [`@comunica/actor-query-source-identify-serialized`](https://github.com/comunica/comunica/tree/master/packages/actor-query-source-identify-serialized)    | Handles serialized sources..                                                               |\n| Hypermedia    | [`@comunica/actor-query-source-identify-hypermedia`](https://github.com/comunica/comunica/tree/master/packages/actor-query-source-identify-hypermedia)   | Handles [hypermedia-based sources](/docs/modify/advanced/hypermedia/). |\n| RDF/JS Source | [`@comunica/actor-query-source-identify-rdfjs`](https://github.com/comunica/comunica/tree/master/packages/actor-query-source-identify-rdfjs) | Handles [RDF/JS Sources](https://comunica.dev/docs/query/advanced/rdfjs_querying/).        |\n\n\n## Query Source Identify Hypermedia\n\n_Package: [`@comunica/bus-query-source-identify-hypermedia`](https://github.com/comunica/comunica/tree/master/packages/bus-query-source-identify)_\n\nIdentifying a query source based on the extracted metadata.\n\nSubscribed actors need to implement [`ActorQuerySourceIdentifyHypermedia`](https://comunica.github.io/comunica/classes/_comunica_bus_query_source_identify_hypermedia.ActorQuerySourceIdentifyHypermedia.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| None | [`@comunica/actor-query-source-identify-hypermedia-none`](https://github.com/comunica/comunica/tree/master/packages/actor-query-source-identify-hypermedia-none) | The source is considered a raw RDF file, for which all data quads matching the quad pattern are returned. |\n| QPF | [`@comunica/actor-query-source-identify-hypermedia-qpf`](https://github.com/comunica/comunica/tree/master/packages/actor-query-source-identify-hypermedia-qpf) | The source is considered a [Triple/Quad Pattern Fragments](https://linkeddatafragments.org/) interface. |\n| SPARQL | [`@comunica/actor-query-source-identify-hypermedia-sparql`](https://github.com/comunica/comunica/tree/master/packages/actor-query-source-identify-hypermedia-sparql) | The source is considered a SPARQL endpoint if it has a service description, for which we use the SPARQL protocol. |\n\n\n## RDF Join\n\n_Package: [`@comunica/bus-rdf-join`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join)_\n\nHandles joining of bindings streams.\n\nIt supports different logical join types, such as inner, optional, and minus joins.\n\nSubscribed actors need to implement [`ActorRdfJoin`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_join.ActorRdfJoin.html).\n\n### Actors\n\n| Name                                 | Package                                                                                                                                                           | Description                                                                                                                                                                                                                                                                                                                                             |\n|--------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Inner Hash                           | [`@comunica/actor-rdf-join-inner-hash`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-hash)                                      | Inner hash join of two entries.                                                                                                                                                                                                                                                                                                                         |\n| Inner Nested loop                    | [`@comunica/actor-rdf-join-inner-nestedloop`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-nestedloop)                          | Inner nested loop join of two entries.                                                                                                                                                                                                                                                                                                                  |\n| Inner None                           | [`@comunica/actor-rdf-join-inner-none`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-none)                                      | Inner join between zero entries, and returns a single binding.                                                                                                                                                                                                                                                                                          |\n| Inner Single                         | [`@comunica/actor-rdf-join-inner-single`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-single)                                  | Inner join of a single entry, and returns the entry itself.                                                                                                                                                                                                                                                                                             |\n| Inner Symmetric hash                 | [`@comunica/actor-rdf-join-inner-symmetrichash`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-symmetrichash)                    | Inner symmetric hash join of two entries.                                                                                                                                                                                                                                                                                                               |\n| Inner Multi empty                    | [`@comunica/actor-rdf-join-inner-multi-empty`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-multi-empty)                        | Inner multi-join that accepts any number of inner-join entries of which at least one is empty and returns an empty stream.                                                                                                                                                                                                                              |\n| Inner Multi Bind                     | [`@comunica/actor-rdf-join-inner-multi-bind`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-multi-bind)                          | Inner multi-join that inner-joins 2 or more streams by picking the one with the lowest cardinality, binding each item with the remaining operations, and recursively resolving those operations by delegating to [`@comunica/bus-query-operation`](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation).                      |\n| Inner Multi Bind Source              | [`@comunica/actor-rdf-join-inner-multi-bind-source`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-multi-bind-source)            | Inner multi-join that inner-joins 2 or more streams by picking the one with the lowest cardinality, chunking it according to a certain block size, and joining each chunk with the remaining query by pushing it into the source.                                                                                                                       |\n| Inner Multi sequential               | [`@comunica/actor-rdf-join-inner-multi-sequential`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-multi-sequential)              | Inner multi-join by just picking the two of them hierarchically.                                                                                                                                                                                                                                                                                        |\n| Inner Multi smallest                 | [`@comunica/actor-rdf-join-inner-multi-smallest`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-multi-smallest)                  | Inner multi-join by always picking the first two streams with smallest estimate cardinality.                                                                                                                                                                                                                                                            |\n| Inner Multi smallest filter bindings | [`@comunica/actor-rdf-join-inner-multi-smallest-filter-bindings`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-inner-multi-smallest-filter-bindings) | Inner multi-join that inner-joins 2 or more streams by joining the smallest two, and joining the result with the remaining streams by delegating back to the [RDF Join bus](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join). While joining the smallest two, the first stream is pushed down as filter into the second stream.. |\n| Minus Hash                           | [`@comunica/actor-rdf-join-minus-hash`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-minus-hash)                                      | Anti-join (minus) of 2 streams using the hash join algorithm. This actor does _not_ support streams that can have undefined values.                                                                                                                                                                                                                     |\n| Minus Hash undef                     | [`@comunica/actor-rdf-join-minus-hash-undef`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-minus-hash-undef)                          | Anti-join (minus) of 2 streams using the hash join algorithm. This actor supports streams that can have undefined values.                                                                                                                                                                                                                               |\n| Optional Bind                        | [`@comunica/actor-rdf-join-optional-bind`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-optional-bind)                                | Left-join (optional) 2 streams using the bind join algorithm. It binds each item of the first stream with the second operation, and recursively resolving that operation by delegating to [`@comunica/bus-query-operation`](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation).                                             |\n| Optional Nested loop                 | [`@comunica/actor-rdf-join-optional-nestedloop`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-optional-nestedloop)                    | Left-join (optional) 2 streams using the nested loop join algorithm.                                                                                                                                                                                                                                                                                    |\n\n\n## RDF Join Entries Sort\n\n_Package: [`@comunica/bus-rdf-join-entries-sort`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join-entries-sort)_\n\nDetermines the order in which join entries should be ordered.\n\nSubscribed actors need to implement [`ActorRdfJoinEntriesSort`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_join_entries_sort.ActorRdfJoinEntriesSort.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| Cardinality | [`@comunica/actor-rdf-join-entries-sort-cardinality`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-entries-sort-cardinality) | Orders join entries by increasing cardinality. |\n\n\n## RDF Join Selectivity\n\n_Package: [`@comunica/bus-rdf-join-selectivity`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-join-selectivity)_\n\nCalculates or estimates the selectivity of joins.\n\nSubscribed actors need to implement [`ActorRdfJoinSelectivity`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_join_selectivity.ActorRdfJoinSelectivity.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| Variable Counting | [`@comunica/actor-rdf-join-selectivity-variable-counting`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-join-selectivity-variable-counting) | Estimates the selectivity by counting the overlap of variables and non-variables in patterns. |\n\n\n## RDF Metadata\n\n_Package: [`@comunica/bus-rdf-metadata`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-metadata)_\n\nExtracts the quads relevant for metadata from the stream of data quads.\n\nSubscribed actors need to implement [`ActorRdfMetadata`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_metadata.ActorRdfMetadata.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| All | [`@comunica/actor-rdf-metadata-all`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-all) | Considers all incoming quads as both data and metadata quads. |\n| Primary topic | [`@comunica/actor-rdf-metadata-primary-topic`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-primary-topic) | Splits off the metadata based on the existence of a `foaf:primaryTopic` link. |\n\n\n## RDF Metadata Accumulate\n\n_Package: [`@comunica/bus-rdf-metadata-accumulate`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-metadata-accumulate)_\n\nA bus for aggregating metadata objects together.\n\nSubscribed actors need to implement [`ActorRdfMetadataAccumulate`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_metadata_accumulate.ActorRdfMetadataAccumulate.html).\n\n### Actors\n\n| Name               | Package                                                                                                                                                                | Description                              |\n|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------|\n| Can Contain Undefs | [`@comunica/actor-rdf-metadata-accumulate-cancontainundefs`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-accumulate-cancontainundefs) | Accumulate the `canContainUndefs` field. |\n| Cardinality        | [`@comunica/actor-rdf-metadata-accumulate-cardinality`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-accumulate-cardinality)           | Accumulate the `cardinality` field.      |\n| Page Size          | [`@comunica/actor-rdf-metadata-accumulate-pagesize`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-accumulate-pagesize)                 | Accumulate the `pageSize` field.         |\n| Request Time       | [`@comunica/actor-rdf-metadata-accumulate-requesttime`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-accumulate-requesttime)           | Accumulate the `requestTime` field.      |\n\n## RDF Metadata Extract\n\n_Package: [`@comunica/bus-rdf-metadata-extract`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-metadata-extract)_\n\nCreate an object with metadata for a given metadata quad stream.\n\nSubscribed actors need to implement [`ActorRdfMetadataExtract`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_metadata_extract.ActorRdfMetadataExtract.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| Allow HTTP Methods | [`@comunica/actor-rdf-metadata-extract-allow-http-methods`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-allow-http-methods) | Extract the `Allow` HTTP response header. |\n| Hydra Controls | [`@comunica/actor-rdf-metadata-extract-hydra-controls`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-hydra-controls) | Extract controls using the Hydra vocabulary. |\n| Hydra Count | [`@comunica/actor-rdf-metadata-extract-hydra-count`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-hydra-count) | Extract count estimates using the Hydra vocabulary. |\n| Hydra Page size | [`@comunica/actor-rdf-metadata-extract-hydra-pagesize`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-hydra-pagesize) | Extract page sizes using the Hydra vocabulary. |\n| Patch SPARQL Update | [`@comunica/actor-rdf-metadata-extract-patch-sparql-update`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-patch-sparql-update) | Checks for the presence of `application/sparql-update` in the `Accept-Patch` header. |\n| Put Accepted | [`@comunica/actor-rdf-metadata-extract-put-accepted`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-put-accepted) | Extracts the [`Accept-Put`](https://solidproject.org/TR/protocol#accept-put) HTTP response header. |\n| Request Time | [`@comunica/actor-rdf-metadata-extract-request-time`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-request-time) | Extracts the time it took to request the page in milliseconds. |\n| SPARQL Service | [`@comunica/actor-rdf-metadata-extract-sparql-service`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-metadata-extract-sparql-service) | Extract SPARQL service description metadata. |\n\n\n## RDF Parse\n\n_Package: [`@comunica/bus-rdf-parse`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-parse)_\n\nParses quads from a serialization format.\n\nSubscribed actors need to implement [`ActorRdfParse`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_parse.ActorRdfParse.html).\n\n### Actors\n\n| Name     | Package                                                                                                                    | Description                                                                                                                                            |\n|----------|----------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|\n| HTML     | [`@comunica/actor-rdf-parse-html`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-html)         | Parses HTML documents by delegating to [`@comunica/bus-rdf-parse-html`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-parse-html). |\n| JSON-LD  | [`@comunica/actor-rdf-parse-jsonld`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-jsonld)     | Parses JSON-LD.                                                                                                                                        |\n| N3       | [`@comunica/actor-rdf-parse-n3`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-n3)             | Parses Turtle, Trig, N-triples, or N-Quads.                                                                                                            |\n| RDF/XML  | [`@comunica/actor-rdf-parse-rdfxml`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-rdfxml)     | Parses RDF/XML.                                                                                                                                        |\n| XML RDFa | [`@comunica/actor-rdf-parse-xml-rdfa`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-xml-rdfa) | Parses RDFa in XML.                                                                                                                                    |\n| SHACLC   | [`@comunica/actor-rdf-parse-shaclc`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-shaclc)     | Parses SHACLC.                                                                                                                                         |\n\n\n## RDF Parse HTML\n\n_Package: [`@comunica/bus-rdf-parse-html`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-parse-html)_\n\nParses quads from an HTML document.\n\nSubscribed actors need to implement [`ActorRdfParseHtml`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_parse_html.ActorRdfParseHtml.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| RDFa | [`@comunica/actor-rdf-parse-html-rdfa`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-html-rdfa) | Parses RDFa. |\n| Microdata | [`@comunica/actor-rdf-parse-html-microdata`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-html-microdata) | Parses Microdata to RDF. |\n| Script | [`@comunica/actor-rdf-parse-html-script`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-parse-html-script) | Parses script tags and attempts to parse them by delegating to [`@comunica/bus-rdf-parse`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-parse). |\n\n\n## RDF Resolve Hypermedia Links\n\n_Package: [`@comunica/bus-rdf-resolve-hypermedia-links`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-resolve-hypermedia-links)_\n\nDetermines which links should be followed from the metadata of the current source.\n\nSubscribed actors need to implement [`ActorRdfResolveHypermediaLinks`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_resolve_hypermedia_links.ActorRdfResolveHypermediaLinks.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| Next | [`@comunica/actor-rdf-resolve-hypermedia-links-next`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-resolve-hypermedia-links-next) | Follow next page links. |\n\n## RDF Resolve Hypermedia Links Queue\n\n_Package: [`@comunica/bus-rdf-resolve-hypermedia-links-queue`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-resolve-hypermedia-links-queue)_\n\nCreates [`ILinkQueue`](https://comunica.github.io/comunica/interfaces/_comunica_bus_rdf_resolve_hypermedia_links_queue.ilinkqueue.html) instances,\nwhich enables different strategies for queueing links.\n\nSubscribed actors need to implement [`ActorRdfResolveHypermediaLinksQueue`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_resolve_hypermedia_links_queue.ActorRdfResolveHypermediaLinksQueue.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| FIFO | [`@comunica/actor-rdf-resolve-hypermedia-links-queue-fifo`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-resolve-hypermedia-links-queue-fifo) | Provides a link queue following the first in, first out strategy |\n\n\n## RDF Serialize\n\n_Package: [`@comunica/bus-rdf-serialize`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-serialize)_\n\nSerializes quads to an RDF serialization format.\n\nSubscribed actors need to implement [`ActorRdfSerialize`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_serialize.ActorRdfSerialize.html).\n\n### Actors\n\n| Name    | Package                                                                                                                        | Description                                        |\n|---------|--------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------|\n| JSON-LD | [`@comunica/actor-rdf-serialize-jsonld`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-serialize-jsonld) | Serializes to JSON-LD.                             |\n| N3      | [`@comunica/actor-rdf-serialize-n3`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-serialize-n3)         | Serializes to Turtle, Trig, N-triples, or N-Quads. |\n| SHACLC  | [`@comunica/actor-rdf-serialize-shaclc`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-serialize-shaclc) | Serializes to SHACLC.                              |\n\n\n## RDF Update Hypermedia\n\n_Package: [`@comunica/bus-rdf-update-hypermedia`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-update-hypermedia)_\n\nHandle a destination based on the extracted metadata.\n\nSubscribed actors need to implement [`ActorRdfUpdateHypermedia`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_update_hypermedia.ActorRdfUpdateHypermedia.html).\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| SPARQL | [`@comunica/actor-rdf-update-hypermedia-patch-sparql-update`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-update-hypermedia-patch-sparql-update) | The destination is considered an HTTP APIs accepting `PATCH` requests containing SPARQL Update queries (`application/sparql-update`), such as [Solid servers](https://github.com/solid/solid-spec/blob/master/api-rest.md#alternative-using-sparql-1). |\n\n\n## RDF Update Quads\n\n_Package: [`@comunica/bus-rdf-update-quads`](https://github.com/comunica/comunica/tree/master/packages/bus-rdf-update-quads)_\n\nHandle the insertion and deletion of streams of quads for a given destination type.\n\nSubscribed actors need to implement [`ActorRdfUpdateQuads`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_update_quads.ActorRdfUpdateQuads.html)\nor [`ActorRdfUpdateQuadsDestination`](https://comunica.github.io/comunica/classes/_comunica_bus_rdf_update_quads.ActorRdfUpdateQuadsDestination.html)\n\n### Actors\n\n| Name | Package | Description |\n| ---- | ------- | ----------- |\n| RDF/JS Store | [`@comunica/actor-rdf-update-quads-rdfjs-store`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-update-quads-rdfjs-store) | The destination is considered an [RDF/JS Store](https://comunica.dev/docs/query/advanced/rdfjs_querying/). |\n| Hypermedia | [`@comunica/actor-rdf-update-quads-hypermedia`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-update-quads-hypermedia) | The destination that handles updates by interpreting hypermedia links and controls. |\n","excerpt":"","path":"/docs/modify/advanced/buses","paths":["/about/","/ask/","/association/","/association/board/","/association/bounty_process/","/blog/","/blog/2020-08-19-intro/","/blog/2020-08-24-release_1_16/","/blog/2020-09-25-release_1_17/","/blog/2020-11-02-release_1_18/","/blog/2021-01-18-release_1_19/","/blog/2021-03-30-release_1_20/","/blog/2021-04-27-release_1_21/","/blog/2021-06-21-comunica_association_bounties/","/blog/2021-08-30-release_1_22/","/blog/2021-11-08-comunica_association_members/","/blog/2022-03-03-release_2_0/","/blog/2022-06-29-release_2_3/","/blog/2022-07-14-association_launch/","/blog/2022-08-24-release_2_4/","/blog/2022-11-09-release_2_5/","/blog/2023-05-24-release_2_7/","/blog/2023-07-04-release_2_8/","/blog/2024-03-19-release_3_0/","/blog/2024-05-11-release_3_1/","/contribute/","/docs/","/docs/query/","/docs/query/getting_started/","/docs/query/getting_started/query_cli/","/docs/query/getting_started/update_cli/","/docs/query/getting_started/query_cli_file/","/docs/query/getting_started/query_app/","/docs/query/getting_started/update_app/","/docs/query/getting_started/query_browser_app/","/docs/query/getting_started/query_docker/","/docs/query/getting_started/setup_endpoint/","/docs/query/getting_started/setup_web_client/","/docs/query/getting_started/query_dev_version/","/docs/query/usage/","/docs/query/faq/","/docs/query/advanced/","/docs/query/advanced/basic_auth/","/docs/query/advanced/bindings/","/docs/query/advanced/caching/","/docs/query/advanced/context/","/docs/query/advanced/destination_types/","/docs/query/advanced/explain/","/docs/query/advanced/extension_functions/","/docs/query/advanced/federation/","/docs/query/advanced/graphql_ld/","/docs/query/advanced/hdt/","/docs/query/advanced/logging/","/docs/query/advanced/memento/","/docs/query/advanced/proxying/","/docs/query/advanced/rdfjs/","/docs/query/advanced/rdfjs_querying/","/docs/query/advanced/rdfjs_updating/","/docs/query/advanced/result_formats/","/docs/query/advanced/solid/","/docs/query/advanced/source_types/","/docs/query/advanced/sparql_query_types/","/docs/query/advanced/specifications/","/docs/modify/","/docs/modify/getting_started/","/docs/modify/getting_started/custom_config_cli/","/docs/modify/getting_started/custom_config_app/","/docs/modify/getting_started/custom_init/","/docs/modify/getting_started/custom_web_client/","/docs/modify/getting_started/contribute_actor/","/docs/modify/getting_started/actor_parameter/","/docs/modify/extensions/","/docs/modify/faq/","/docs/modify/advanced/","/docs/modify/advanced/actor_patterns/","/docs/modify/advanced/algebra/","/docs/modify/advanced/architecture_core/","/docs/modify/advanced/architecture_sparql/","/docs/modify/advanced/browser_builds/","/docs/modify/advanced/buses/","/docs/modify/advanced/componentsjs/","/docs/modify/advanced/custom_cli_arguments/","/docs/modify/advanced/expression-evaluator/","/docs/modify/advanced/hypermedia/","/docs/modify/advanced/joins/","/docs/modify/advanced/logging/","/docs/modify/advanced/mediators/","/docs/modify/advanced/metadata/","/docs/modify/advanced/observers/","/docs/modify/advanced/query_operation_result_types/","/docs/modify/advanced/rdf_parsing_serializing/","/docs/modify/advanced/sparqlee/","/docs/modify/advanced/testing/","/docs/modify/benchmarking/","/events/","/events/2019-06-03-eswc/","/events/2019-10-26-iswc/","/events/2022-09-07-association_launch/","/events/2022-09-13-semantics_conference/","/logos/","/research/","/research/amf/","/research/link_traversal/","/research/versioning/","/roadmap/"],"mattersData":{"/about/":{"title":"About","description":"Learn more about Comunica."},"/ask/":{"title":"Ask","description":"Ask questions about Comunica."},"/association/":{"title":"Comunica Association","description":"Organization for ensuring the maintenance and development of the Comunica"},"/association/board/":{"title":"Board of Directors","description":"The board makes decisions regarding the Comunica Association"},"/association/bounty_process/":{"title":"Bounty Procedures","description":"The process for handling bounties on issues"},"/blog/":{"title":"Blog","description":"Blog posts, containing announcements or other news.","blog_index":true},"/blog/2020-08-19-intro/":{"title":"A New Website for Comunica","excerpt":"\nWe're happy to present a brand new website for Comunica! 🎉\n_Don't know that Comunica is? [Read about it here](/about/)._\n\nThis new version contains all **basic information** around Comunica.\nAdditionally, it contains **guides** on how to [query with Comunica](/docs/query/),\nand how to [modify or extend it](/docs/modify/). \n\n"},"/blog/2020-08-24-release_1_16/":{"title":"Release 1.16.0: Full spec compliance, property paths, CSV/TSV, basic auth, and fixes","excerpt":"\nWith the latest release of Comunica, we have achieved the major milestone of **full compliance to the SPARQL 1.1 specification**.\nWhile Comunica has had support for all SPARQL 1.1 operators for a while,\nsome small parts were not always fully handled according to the spec,\nand property paths were not fully supported.\n\nThanks to the help of several students over the summer, these issues have been resolved,\nand all tests from [the SPARQL 1.1 test suite](https://w3c.github.io/rdf-tests/sparql11/) now pass.\n\n"},"/blog/2020-09-25-release_1_17/":{"title":"Hacktoberfest and Release 1.17.0","excerpt":"\nIn this post, we give an overview of\ncontribution possibilities during [Hacktoberfest](https://hacktoberfest.digitalocean.com/),\nand the newly released 1.17.0 version. \n\n"},"/blog/2020-11-02-release_1_18/":{"title":"Release 1.18.0: Smaller Web bundles and Microdata parsing","excerpt":"\nThis post gives a brief overview of the new 1.18.0 release.\n\n"},"/blog/2021-01-18-release_1_19/":{"title":"Release 1.19.0: Simplifications for extensions","excerpt":"\nThe 1.19.0 release focuses on simplications for developing Comunica extension.\nIt contains no significant fixes or changes for end-users.\n\n"},"/blog/2021-03-30-release_1_20/":{"title":"Release 1.20.0: SPARQL Update support","excerpt":"\nWith this new 1.20.0 release, we bring support for [SPARQL Update](https://www.w3.org/TR/sparql11-update/) queries to Comunica.\nNext to this, several enhancements were made to improve developer experience,\nminor new features, and important bug fixes.\n\n"},"/blog/2021-04-27-release_1_21/":{"title":"Release 1.21.0: Hypermedia-based SPARQL Updating","excerpt":"\nThe 1.21.0 version is a smaller release,\nthat mainly introduces the necessary wiring to enable hypermedia-driven SPARQL update querying,\nwhich lays the foundations for highly flexible updating of heterogeneous destinations, such as Solid data pods.\n\nIn other words, this provides the necessary ✨_magic_✨ for updating many different types of things.  \n\n"},"/blog/2021-06-21-comunica_association_bounties/":{"title":"Announcing the Comunica Association, and a Bounty Program","excerpt":"\nIn this post, we announce the creation of the [Comunica Association](/association/),\nand the introduction of a new bounty system using which **organizations** and companies\ncan **fund development** of new features and the fixing of bugs,\nand through which **developers** can take up these bounties and **get paid**.\n\n"},"/blog/2021-08-30-release_1_22/":{"title":"Release 1.22.0: Improved update support, extension functions, and improved CLI handling","excerpt":"\nThe 1.22.0 version features some major additions, and a bunch of smaller internal fixes and performance improvements 🚀!\nThe primary changes that are discussed in this post are\nsupport for more SPARQL update destination types,\nSPARQL extension functions,\nand rewritten CLI handling.\n\n"},"/blog/2021-11-08-comunica_association_members/":{"title":"Comunica Association Memberships","excerpt":"\n[Earlier this year](/blog/2021-06-21-comunica_association_bounties/),\nwe announced the [Comunica Association](/association/),\nwhich is a non-profit organization that aims to make Comunica sustainable in the long term.\nIn this post, we announce the possibility to become a _member_ or _sponsor_ to the association,\nallowing organizations to drive the future roadmap of Comunica.\nWe plan an **official launch in fall 2022**, up until when organizations can choose\nto become a **founding member** of the Comunica Association.\n\n"},"/blog/2022-03-03-release_2_0/":{"title":"Release 2.0.0: A new major release with radical simplifications and performance improvements","excerpt":"\nSince its initial release a couple of years ago, Comunica has grown a lot,\nbut it has always remained fully backwards-compatible with every update.\nHowever, as with every software project, there is sometimes a need to make breaking changes\nso that old mechanisms can be replaced with better, newer ones.\nWith this update, we have aggregated several breaking changes into one large update,\nall of which should improve the lives of users one way or another.\nBelow, the primary changes are listed.\n\n"},"/blog/2022-06-29-release_2_3/":{"title":"Release 2.3.0: Better timeout support and minor enhancements","excerpt":"\nIt's been a while since our latest blog post,\nso here's a small announcement on the latest 2.3.0 release.\n\n"},"/blog/2022-07-14-association_launch/":{"title":"Official launch of the Comunica Association","excerpt":"\nAs previously announced, we will be officially launching the Comunica Association during the fall of this year.\nMore concretely, we are organizing an online launch event on the 7th of September,\nand we will be physically present at the Semantics conference in Vienna the week afterwards.\n\n"},"/blog/2022-08-24-release_2_4/":{"title":"Release 2.4.0: Better browser support and performance improvements","excerpt":"\nWe just released a new minor version of Comunica.\nHere's an overview of the main changes.\n\n"},"/blog/2022-11-09-release_2_5/":{"title":"Release 2.5.0: Fixes, string sources, and HTTP error handling","excerpt":"\nWe just released a new small update. Here's an overview of the main changes.\n\n"},"/blog/2023-05-24-release_2_7/":{"title":"Release 2.7.0: Better date support, better performance over SPARQL endpoints, and internal fixes","excerpt":"\nToday, we released a new minor update, which brings exciting new features, performance improvements, and bug fixes.\nBelow, you can find an overview of the main changes.\n\n"},"/blog/2023-07-04-release_2_8/":{"title":"Release 2.8.0: Support for quoted triples (RDF-star and SPARQL-star)","excerpt":"\nThis minor release focuses on a single but significant new feature: support for quoted triples.\n\n"},"/blog/2024-03-19-release_3_0/":{"title":"Release 3.0: 🔥 Blazingly fast federation over heterogeneous sources","excerpt":"\nMore than 2 years ago, we released [Comunica version 2.0](/blog/2022-03-03-release_2_0/),\nwhich featured many internal and external API changes that significantly simplified its usage.\nToday, we release version 3.0, which focuses more on internal changes, with limited changes to the external API.\nMost of the changes relate to the handling of data sources during query planning,\nwhich allows **more efficient query plans to be produced when querying over federations of heterogeneous sources**.\nThis means that for people using Comunica, the number of breaking changes in this update are very limited.\nThings will simplify be faster in general, and some small convenience features have been added,\nsuch as results being [async iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_async_iterator_and_async_iterable_protocols). \nTo developers extending Comunica with custom actors, there will be some larger breaking changes.\n\n"},"/blog/2024-05-11-release_3_1/":{"title":"Release 3.1: 🌱 New package with tiny bundle size","excerpt":"\nThe primary addition in this release is the new [`@comunica/query-sparql-rdfjs-lite`](https://www.npmjs.com/package/@comunica/query-sparql-rdfjs-lite) package,\nwhich is optimized for small browser bundle size.\nCurrently, the minified size of this package is 648,88 KB (145,79 KB when gzipped).\nThis is about as small as you can get without removing required functionality from the SPARQL 1.1 spec\nBut if you don't need everything from SPARQL 1.1, it could get much smaller even!\n\n"},"/contribute/":{"title":"Contribute","description":"Contribute to the development of Comunica."},"/docs/":{"title":"Documentation","description":"Overview of all Comunica documentation.","index":true},"/docs/query/":{"title":"Query with Comunica","description":"Learn how to execute queries in different environments. Such as live in the browser, in JavaScript applications, or the CLI.","index":true},"/docs/query/getting_started/":{"title":"Getting started with querying","description":"Basic guides on how to easily get started with querying.","index":true},"/docs/query/getting_started/query_cli/":{"title":"Querying from the command line","description":"Execute SPARQL queries directly from the command line."},"/docs/query/getting_started/update_cli/":{"title":"Updating from the command line","description":"Execute SPARQL Update queries directly from the command line."},"/docs/query/getting_started/query_cli_file/":{"title":"Querying local files from the command line","description":"Execute SPARQL queries over local RDF files directly from the command line."},"/docs/query/getting_started/query_app/":{"title":"Querying in a JavaScript app","description":"Execute SPARQL queries from within your application using the JavaScript API."},"/docs/query/getting_started/update_app/":{"title":"Updating in a JavaScript app","description":"Execute SPARQL Update queries from within your application using the JavaScript API."},"/docs/query/getting_started/query_browser_app/":{"title":"Querying in a JavaScript browser app","description":"Execute SPARQL queries from within your client-side browser application using the JavaScript API."},"/docs/query/getting_started/query_docker/":{"title":"Querying from a Docker container","description":"Execute SPARQL queries within a Docker container."},"/docs/query/getting_started/setup_endpoint/":{"title":"Setting up a SPARQL endpoint","description":"Allow querying over HTTP via the SPARQL protocol"},"/docs/query/getting_started/setup_web_client/":{"title":"Setting up a Web client","description":"Set up a user-friendly static Web page where SPARQL queries can be executed client-side"},"/docs/query/getting_started/query_dev_version/":{"title":"Query using the latest development version","description":"If you want to make use of the latest changes that are not released yet"},"/docs/query/usage/":{"title":"Usage showcase","description":"Examples of where Comunica is used."},"/docs/query/faq/":{"title":"Querying FAQ","description":"Frequently asked questions about using Comunica."},"/docs/query/advanced/":{"title":"Advanced querying","description":"Advanced guides on how to get the most out of Comunica.","index":true},"/docs/query/advanced/basic_auth/":{"title":"HTTP Basic Authentication","description":"Send authenticated HTTP requests by including username and password."},"/docs/query/advanced/bindings/":{"title":"Bindings","description":"Bindings objects are used to represent results of SPARQL SELECT queries"},"/docs/query/advanced/caching/":{"title":"Caching","description":"When remote sources are requested, caching allows them to be reused in the future."},"/docs/query/advanced/context/":{"title":"Passing a context","description":"A context can be passed to a query engine to tweak its runtime settings."},"/docs/query/advanced/destination_types/":{"title":"Destination types","description":"Comunica detects and handles different types of destinations."},"/docs/query/advanced/explain/":{"title":"Explain","description":"Display information about the logical and physical query plan"},"/docs/query/advanced/extension_functions/":{"title":"Extension Functions","description":"Providing implementations for SPARQL extension functions."},"/docs/query/advanced/federation/":{"title":"Federated Querying","description":"Query over the union of data within any number of sources"},"/docs/query/advanced/graphql_ld/":{"title":"GraphQL-LD","description":"Using the power of JSON-LD contexts, GraphQL queries can be executed by Comunica"},"/docs/query/advanced/hdt/":{"title":"HDT","description":"HDT offers highly compressed immutable RDF storage."},"/docs/query/advanced/logging/":{"title":"Logging","description":"Loggers can be set to different logging levels to inspect what Comunica is doing behind the scenes."},"/docs/query/advanced/memento/":{"title":"Memento","description":"Using the Memento protocol, time travel queries can be executed."},"/docs/query/advanced/proxying/":{"title":"HTTP Proxy","description":"All HTTP requests can optionally go through a proxy."},"/docs/query/advanced/rdfjs/":{"title":"RDF/JS","description":"To achieve maximum interoperability between different JavaScript libraries, Comunica builds on top of the RDF/JS specifications."},"/docs/query/advanced/rdfjs_querying/":{"title":"Querying over RDF/JS sources","description":"If the built-in source types are not sufficient, you can pass a custom JavaScript object implementing a specific interface."},"/docs/query/advanced/rdfjs_updating/":{"title":"Updating RDF/JS stores","description":"If the built-in destination types are not sufficient, you can pass a custom JavaScript object implementing a specific interface."},"/docs/query/advanced/result_formats/":{"title":"Result formats","description":"Query results can be serialized in different formats."},"/docs/query/advanced/solid/":{"title":"Solid","description":"Solid – the Web-based decentralization ecosystem – can be queried with Comunica."},"/docs/query/advanced/source_types/":{"title":"Source types","description":"Comunica detects and handles different types of sources."},"/docs/query/advanced/sparql_query_types/":{"title":"SPARQL query types","description":"Different SPARQL query types are possible, such as SELECT, CONSTRUCT, ASK, ..."},"/docs/query/advanced/specifications/":{"title":"Supported specifications","description":"Comunica supports several RDF-related specifications"},"/docs/modify/":{"title":"Modify Comunica","description":"Learn how to configure your own Comunica engine, or extend Comunica by implementing new components.","index":true},"/docs/modify/getting_started/":{"title":"Getting started with modification","description":"Basic guides on how to easily get started with Comunica modification.","index":true},"/docs/modify/getting_started/custom_config_cli/":{"title":"Querying with a custom configuration from the command line","description":"Create a custom configuration of Comunica modules with reduced features, and query with it from the command line."},"/docs/modify/getting_started/custom_config_app/":{"title":"Querying with a custom configuration in a JavaScript app","description":"Create a custom configuration of Comunica modules with changed features, and query with it from within your application using the JavaScript API."},"/docs/modify/getting_started/custom_init/":{"title":"Exposing your custom config as an npm package","description":"Wrap your config in an npm package, and expose a CLI tool and a JavaScript API."},"/docs/modify/getting_started/custom_web_client/":{"title":"Exposing your custom config in a Web client","description":"Demonstrate your query engine as a static Web page."},"/docs/modify/getting_started/contribute_actor/":{"title":"Contributing a new query operation actor to the Comunica repository","description":"Setup a development environment, implement a new actor, and create a pull request."},"/docs/modify/getting_started/actor_parameter/":{"title":"Adding a config parameter to an actor","description":"For an existing actor, add a parameter that can be customized in the config file."},"/docs/modify/extensions/":{"title":"Extensions","description":"Existing extensions of Comunica."},"/docs/modify/faq/":{"title":"Modify FAQ","description":"Frequently asked question about Comunica modification."},"/docs/modify/advanced/":{"title":"Advanced modification","description":"Advanced guides on how to get the most out of Comunica modification.","index":true},"/docs/modify/advanced/actor_patterns/":{"title":"Actor Patterns","description":"Overview of common design patterns for actors"},"/docs/modify/advanced/algebra/":{"title":"Algebra","description":"The internal representation of queries during query execution."},"/docs/modify/advanced/architecture_core/":{"title":"Core Architecture","description":"The low-level software architecture of Comunica for achieving modularity."},"/docs/modify/advanced/architecture_sparql/":{"title":"SPARQL Architecture","description":"The high-level software architecture of Comunica for implementing SPARQL."},"/docs/modify/advanced/browser_builds/":{"title":"Browser builds","description":"All modules in Comunica can be built for the browser."},"/docs/modify/advanced/buses/":{"title":"Buses and Actors","description":"An overview of all buses in Comunica and their actors."},"/docs/modify/advanced/componentsjs/":{"title":"Components.js","description":"Components.js is the dependency injection framework that Comunica uses to wire components via config files."},"/docs/modify/advanced/custom_cli_arguments/":{"title":"Custom CLI arguments","description":"Adding custom arguments to CLI tools"},"/docs/modify/advanced/expression-evaluator/":{"title":"Expression Evaluator","description":"The expression evaluation engine of Comunica."},"/docs/modify/advanced/hypermedia/":{"title":"Hypermedia","description":"Discovery of data source capabilities during query execution."},"/docs/modify/advanced/joins/":{"title":"Joins","description":"Overview of how join operations are handled during query planning"},"/docs/modify/advanced/logging/":{"title":"Logging","description":"How to log messages from within actors."},"/docs/modify/advanced/mediators/":{"title":"Mediators","description":"An overview of all mediators in Comunica."},"/docs/modify/advanced/metadata/":{"title":"Metadata","description":"Information for adaptive planning of query operations."},"/docs/modify/advanced/observers/":{"title":"Observers","description":"Passively observe actions executed by actors on a given bus."},"/docs/modify/advanced/query_operation_result_types/":{"title":"Query operation result types","description":"An overview of the different output types for query operations."},"/docs/modify/advanced/rdf_parsing_serializing/":{"title":"RDF Parsing and Serializing","description":"Basic concepts behind parsing and serializing RDF."},"/docs/modify/advanced/sparqlee/":{"title":"Sparqlee","description":"The SPARQL expression evaluation engine of Comunica. (DEPRECATED)"},"/docs/modify/advanced/testing/":{"title":"Testing","description":"The unit and integration tests that lead to a more stable codebase."},"/docs/modify/benchmarking/":{"title":"Benchmarking","description":"Guidelines on running experiments with Comunica."},"/events/":{"title":"Events","description":"Overview of all Comunica-related events.","index":true,"reverse":true},"/events/2019-06-03-eswc/":{"title":"2019-06-03: Tutorial at ESWC 2019","description":"Comunica tutorial at the ESWC 2019 conference"},"/events/2019-10-26-iswc/":{"title":"2019-10-26: Tutorial at ISWC 2019","description":"Comunica and Solid tutorial at the ISWC 2019 conference"},"/events/2022-09-07-association_launch/":{"title":"2022-09-07: Comunica Association Launch","description":"An online event for the official launch of the Comunica Association"},"/events/2022-09-13-semantics_conference/":{"title":"2022-09-13/15: Semantics Conference","description":"The Comunica Association will have a booth and talk at the Semantics Conference in Vienna"},"/logos/":{"title":"Logos","description":"Free to use logos of Comunica."},"/research/":{"title":"Research","description":"An overview of these research surrounding Comunica."},"/research/amf/":{"title":"Approximate Membership Functions","description":"An overview of research that has been done on AMFs during query execution."},"/research/link_traversal/":{"title":"Link Traversal","description":"An overview of research that has been done on Link-Traversal-based Query Processing."},"/research/versioning/":{"title":"Versioning","description":"An overview of research that has been done on Query Processing for RDF archives."},"/roadmap/":{"title":"Roadmap","description":"The long-term goals of Comunica"}}},"__N_SSG":true}